%Simulation parameters go here
T_sample = 0.001;           %Sample time of controller
step_size_array = [1, 0.1];              %% magnitude of step response
disc_type = 0;              %% 0 is for Backwards Difference, 1 is for forwards_difference


%% Types of controller : values for sat_cont
%1 : PI LEAD 1 &&
%2 : PI LEAD 2
%3 : LEAD no SAT 0.1M
%4 : LEAD SAT 0.1M
%5 : PID MED POL CONTROLLER
%6 : PI LEAD 3 - sat
%7 : PI LEAD 4 no sat
sat_cont = 1;               %% CHOICE OF CONTROLLER

CONT_PI_LEAD_ARRAY = [1, 2, 6];
CONT_LEAD_ARRAY  = [3, 4];

%antiwindup  % either 'on' or 'off'
anti_windup = 'on'



%% Creates Empty Arrays for these tests
addpath('functions')
run('NonLinearModelParameters.m')
run('initialize_values.m')
open_system("Discrete_Model.slx")




%% This simulation is to create an array with the different PI-LEAD controllers using same parameters

%%PID SIMULATION
assign_blocks(anti_windup, 'PI-LEAD')
for j = 1:length(step_size_array)
    step_size = step_size_array(j);
        for i = 1:length(CONT_PI_LEAD_ARRAY)
            disp("Controller number " + i)
            
            %% if the simulation has run with the same parameters, then don't run it again
            if isequal(PI_LEAD_ARRAY_old(i +(j-1)*length(CONT_PI_LEAD_ARRAY), :), [T_sample, step_size_array(j), CONT_PI_LEAD_ARRAY(i)])
                disp("This controller has already been simulated")
                continue
            end
            
            %Timer
            tic
            sat_cont = CONT_PI_LEAD_ARRAY(i);
            run("NonLinearModelParameters");
            toc
            out = sim("Discrete_Model");
            
            PI_LEAD_ARRAY_1m(:, i + (j-1) * length(CONT_PI_LEAD_ARRAY)) = out.last_test;
            toc
            
            %% Save values of the current run simulation
            PI_LEAD_ARRAY_old(i + (j-1) * length(CONT_PI_LEAD_ARRAY), :) = [T_sample, step_size_array(j), CONT_PI_LEAD_ARRAY(i)]

        end
end




for j = 1:length(step_size_array)
    step_size = step_size_array(j);
        for i = 1:length(CONT_LEAD_ARRAY)
            disp("Controller number " + i)
            
            %% if the simulation has run with the same parameters, then don't run it again
            if isequal(PI_LEAD_ARRAY_old(i +(j-1)*length(CONT_PI_LEAD_ARRAY), :), [T_sample, step_size_array(j), CONT_PI_LEAD_ARRAY(i)])
                disp("This controller has already been simulated")
                continue
            end
            
            %Timer
            tic
            sat_cont = CONT_PI_LEAD_ARRAY(i);
            run("NonLinearModelParameters");
            toc
            out = sim("Discrete_Model");
            
            PI_LEAD_ARRAY_1m(:, i + (j-1) * length(CONT_PI_LEAD_ARRAY)) = out.last_test;
            toc
            
            %% Save values of the current run simulation
            PI_LEAD_ARRAY_old(i + (j-1) * length(CONT_PI_LEAD_ARRAY), :) = [T_sample, step_size_array(j), CONT_PI_LEAD_ARRAY(i)]

        end
end









for j = 1:length(step_size_array)
    step_size = step_size_array(j);
    if j == 1
        for i = 1:length(CONT_LEAD_ARRAY)
            assign_blocks(anti_windup, 'LEAD')
            disp("Controller number " + i)
            
            %% if the simulation has run with the same parameters, then don't run it again
            if isequal(CONT_LEAD_ARRAY_old(i, :), [T_sample, step_size(j), CONT_LEAD_ARRAY(i)])
                disp("This controller has already been simulated")
                continue
            end
    
            %Timer
            tic
            sat_cont = CONT_LEAD_ARRAY(i);
            run("NonLinearModelParameters");
            toc
            out = sim("Discrete_Model");
            
            CONT_LEAD_ARRAY_RESULTS(:, i) = out.last_test;
            toc
            
            %% Save values of the current run simulation
            CONT_LEAD_ARRAY_OLD(i, :) = [T_sample, step_size(j), CONT_LEAD_ARRAY(i)]
            
        end
        
    elseif j == 2
        
        for i = 1:length(CONT_LEAD_ARRAY)
            assign_blocks(anti_windup, 'LEAD')
            
            
            
            %% if the simulation has run with the same parameters, then don't run it again
            if isequal(CONT_LEAD_ARRAY_OLD(i + (j - 1) * length(CONT_LEAD_ARRAY), :), [T_sample, step_size_array(j), CONT_PI_LEAD_ARRAY(i)])
                disp("This controller has already been simulated")
                continue
            end

            
            tic
            disp("Controller number " + i)
            
            sat_cont = CONT_LEAD_ARRAY(i);
            run("NonLinearModelParameters");
            out = sim("Discrete_Model");
            CONT_LEAD_ARRAY_RESULTS(:, i + j* length(CONT_LEAD_ARRAY) ) = out.last_test;
            toc
            
            CONT_LEAD_ARRAY_old(i + (j-1) * length(CONT_LEAD_ARRAY), :) = [T_sample, step_size_array(j), CONT_LEAD_ARRAY(i)]

        end
    end
end

















time = 0:1/10000:3;


plot(time, PI_LEAD_ARRAY_1m)
close_system


